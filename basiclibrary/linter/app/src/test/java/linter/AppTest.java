/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

// for JUnit Jupiter API
testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

// for Java standard library
        implementation 'org.apache.commons:commons-lang3:3.12.0'


public class AppTest {
    @Test
    public void testMainMethod() {
        App app = new App();
        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        System.setOut(new PrintStream(outContent));

        app.main(new String[]{});

        String expectedOutput = "High: 72\n" +
                "Low: 51\n" +
                "Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69\n" +
                "Never saw temperature: 73\n" +
                "Never saw temperature: 74\n";

        assertEquals(expectedOutput, outContent.toString());
    }
    @Test
    public void testTallyWithEmptyList() {
        List<String> votes = new ArrayList<>();
        String winner = App.tally(votes);
        assertEquals(null, winner);
    }

    @Test
    public void testTallyWithOneVote() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        String winner = App.tally(votes);
        assertEquals("Bush", winner);
    }

    @Test
    public void testTallyWithTwoVotesForSameCandidate() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        String winner = App.tally(votes);
        assertEquals("Bush", winner);
    }

    @Test
    public void testTallyWithTwoVotesForDifferentCandidates() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Gore");
        String winner = App.tally(votes);
        assertEquals("Bush", winner);
    }

    @Test
    public void testTallyWithThreeVotes() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Gore");
        votes.add("Bush");
        String winner = App.tally(votes);
        assertEquals("Bush", winner);
    }

    @Test
    public void testTallyWithFourVotes() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Gore");
        votes.add("Gore");
        votes.add("Bush");
        String winner = App.tally(votes);
        assertEquals("Bush", winner);
    }
}