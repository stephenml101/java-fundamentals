/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.util.HashSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;



public class App {

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        int min = weeklyMonthTemperatures[0][0];                            //first index of import hash
        int max = weeklyMonthTemperatures[0][0];                            //first index of import hash

        HashSet<Integer> diffTemps = new HashSet<>();                        //new hash diffTemps

        for (int[] weeklyTemperatures : weeklyMonthTemperatures) {           //iterates through the

            for (int temperature : weeklyTemperatures) {                     //iterates the temps for each day of the week

                if (temperature < min) {                                     //compares
                    min = temperature;
                } else if (temperature > max) {                              //compares
                    max = temperature;
                }

                diffTemps.add(temperature);
            }
        }

        StringBuilder sb = new StringBuilder();
        for (int i = min; i <= max; i++) {
            if (!diffTemps.contains(i)) {
                sb.append("Never saw temperature: ").append(i).append("\n");
            }
        }
        //print the resultsS
        System.out.println("High: " + max);
        System.out.println("Low: " + min);
        System.out.println(sb.toString());

        run(args);
    }
    public static void run(String[] args) {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        System.out.println("Votes: " + votes); // print the contents of the votes list
        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");
    }
    public static String tally(List<String> votes) {
        Map<String, Integer> countMap = new HashMap<>();
        int maxCount = 0;
        String winner = null;

        for (String vote : votes) {
            int count = countMap.getOrDefault(vote, 0) + 1;
            countMap.put(vote, count);

            if (count > maxCount) {
                maxCount = count;
                winner = vote;
            }
        }

        return winner;
    }
}
